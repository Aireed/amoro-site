<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Benchmarks on Apache Amoro™</title>
    <link>https://amoro.apache.org/benchmark/</link>
    <description>Recent content in Benchmarks on Apache Amoro™</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://amoro.apache.org/benchmark/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Benchmark Report</title>
      <link>https://amoro.apache.org/benchmark-report/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/benchmark-report/</guid>
      <description>&lt;h1 id=&#34;benchmark-report&#34;&gt;Benchmark Report&lt;/h1&gt;&#xA;&lt;h2 id=&#34;test-purpose&#34;&gt;Test purpose&lt;/h2&gt;&#xA;&lt;p&gt;This test aims at comparing the OLAP benchmark performance of various data lake formats in the scenario of continuous streaming ingestion in the CDC database.&lt;/p&gt;&#xA;&lt;p&gt;Meanwhile, particular attention was paid during the testing process to the impact of enabling self-optimizing on the analytical performance of the table.&lt;/p&gt;&#xA;&lt;h2 id=&#34;test-envrionment&#34;&gt;Test envrionment&lt;/h2&gt;&#xA;&lt;h3 id=&#34;hardware-configuration&#34;&gt;Hardware configuration&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Number&lt;/th&gt;&#xA;          &lt;th&gt;OS&lt;/th&gt;&#xA;          &lt;th&gt;Cpu core&lt;/th&gt;&#xA;          &lt;th&gt;Memory&lt;/th&gt;&#xA;          &lt;th&gt;Disk type&lt;/th&gt;&#xA;          &lt;th&gt;Deployed components&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;CentOS 7&lt;/td&gt;&#xA;          &lt;td&gt;40&lt;/td&gt;&#xA;          &lt;td&gt;256&lt;/td&gt;&#xA;          &lt;td&gt;SAS&lt;/td&gt;&#xA;          &lt;td&gt;HDFS、Hive、Yarn&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;CentOS 7&lt;/td&gt;&#xA;          &lt;td&gt;40&lt;/td&gt;&#xA;          &lt;td&gt;256&lt;/td&gt;&#xA;          &lt;td&gt;SAS&lt;/td&gt;&#xA;          &lt;td&gt;HDFS、Hive、Yarn&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;CentOS 7&lt;/td&gt;&#xA;          &lt;td&gt;40&lt;/td&gt;&#xA;          &lt;td&gt;256&lt;/td&gt;&#xA;          &lt;td&gt;SAS&lt;/td&gt;&#xA;          &lt;td&gt;HDFS、Hive、Yarn&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;CentOS 7&lt;/td&gt;&#xA;          &lt;td&gt;40&lt;/td&gt;&#xA;          &lt;td&gt;256&lt;/td&gt;&#xA;          &lt;td&gt;SAS&lt;/td&gt;&#xA;          &lt;td&gt;Trino、Presto&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;CentOS 7&lt;/td&gt;&#xA;          &lt;td&gt;40&lt;/td&gt;&#xA;          &lt;td&gt;256&lt;/td&gt;&#xA;          &lt;td&gt;SAS&lt;/td&gt;&#xA;          &lt;td&gt;Trino、Presto&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;CentOS 7&lt;/td&gt;&#xA;          &lt;td&gt;40&lt;/td&gt;&#xA;          &lt;td&gt;256&lt;/td&gt;&#xA;          &lt;td&gt;SAS&lt;/td&gt;&#xA;          &lt;td&gt;Trino、Presto&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;software-version&#34;&gt;Software version&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Software&lt;/th&gt;&#xA;          &lt;th&gt;Version&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Trino&lt;/td&gt;&#xA;          &lt;td&gt;380&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Presto&lt;/td&gt;&#xA;          &lt;td&gt;274&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Iceberg&lt;/td&gt;&#xA;          &lt;td&gt;0.13&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Amoro&lt;/td&gt;&#xA;          &lt;td&gt;0.4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Hudi&lt;/td&gt;&#xA;          &lt;td&gt;0.11.1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;test-plan&#34;&gt;Test plan&lt;/h2&gt;&#xA;&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;&#xA;&lt;p&gt;This test is based on CHbenchmark, which is a hybrid testing standard that integrates TPCC and TPCH. The overall testing workload can be divided into two categories:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How To Benchmark</title>
      <link>https://amoro.apache.org/benchmark-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://amoro.apache.org/benchmark-guide/</guid>
      <description>&lt;h1 id=&#34;benchmark-guild&#34;&gt;Benchmark Guild&lt;/h1&gt;&#xA;&lt;p&gt;This guilde introduces detailed steps for executing the benchmark to validate performance of various data lake formats.&lt;/p&gt;&#xA;&lt;p&gt;By following the steps in the guild, you can learn about the analytical performance of different data lake table format. At the same time, you can flexibly adjust the test scenarios to obtain test results that better suit your actual scenario.&lt;/p&gt;&#xA;&lt;h2 id=&#34;deploy-testing-environment&#34;&gt;Deploy testing environment&lt;/h2&gt;&#xA;&lt;h3 id=&#34;deploy-by-docker&#34;&gt;Deploy by Docker&lt;/h3&gt;&#xA;&lt;p&gt;With &lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker-Compose&lt;/a&gt;, you can quickly set up an environment for performing the benchmark.&#xA;The detailed steps reference: &lt;a href=&#34;https://github.com/NetEase/lakehouse-benchmark/tree/master/docker/benchmark&#34;&gt;Lakehouse-benchmark&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
